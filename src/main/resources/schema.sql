-- h2/postgres
DROP TABLE IF EXISTS votes;
DROP TABLE IF EXISTS dishes;
DROP TABLE IF EXISTS menus;
DROP TABLE IF EXISTS restaurants;
DROP TABLE IF EXISTS roles;
DROP TABLE IF EXISTS users;
DROP SEQUENCE IF EXISTS global_seq;

CREATE SEQUENCE GLOBAL_SEQ START 10000;

CREATE TABLE users
(
  ID         BIGINT NOT NULL DEFAULT nextval('GLOBAL_SEQ') PRIMARY KEY,
  NAME       VARCHAR(255)            NOT NULL,
  EMAIL      VARCHAR(255)            NOT NULL,
  PASSWORD   VARCHAR(255)            NOT NULL,
  REGISTERED TIMESTAMP DEFAULT now() NOT NULL,
  ENABLED    BOOLEAN DEFAULT TRUE    NOT NULL
);
CREATE UNIQUE INDEX email_idx
  ON users (EMAIL);

CREATE TABLE roles
(
  USER_ID BIGINT NOT NULL,
  ROLE    VARCHAR(255),
  CONSTRAINT roles_idx UNIQUE (USER_ID, ROLE),
  FOREIGN KEY (USER_ID) REFERENCES users (ID)
    ON DELETE CASCADE
);

CREATE TABLE restaurants
(
  ID          BIGINT NOT NULL DEFAULT nextval('GLOBAL_SEQ') PRIMARY KEY,
  NAME        VARCHAR(255)       NOT NULL,
  CITY        VARCHAR(255)       NOT NULL,
  DESCRIPTION VARCHAR(255)       NOT NULL,
  ADDED       DATE DEFAULT now() NOT NULL
);
CREATE UNIQUE INDEX restaurants_unique_name_city_idx
  ON restaurants (NAME, CITY);

CREATE TABLE menus
(
  ID            BIGINT NOT NULL DEFAULT nextval('GLOBAL_SEQ') PRIMARY KEY,
  ADDED         DATE DEFAULT now()    NOT NULL,
  RESTAURANT_ID BIGINT               NOT NULL,
  FOREIGN KEY (RESTAURANT_ID) REFERENCES restaurants (ID)
    ON DELETE CASCADE
);
CREATE UNIQUE INDEX menus_unique_date_restaurant_idx
  ON menus (ADDED, RESTAURANT_ID);

CREATE TABLE dishes
(
  ID      BIGINT NOT NULL DEFAULT nextval('GLOBAL_SEQ') PRIMARY KEY,
  NAME    VARCHAR(255)   NOT NULL,
  PRICE   NUMERIC(10, 2) NOT NULL,
  MENU_ID BIGINT        NOT NULL,
  FOREIGN KEY (MENU_ID) REFERENCES menus (ID)
    ON DELETE CASCADE
);
CREATE UNIQUE INDEX dishes_unique_name_menu_idx
  ON dishes (NAME, MENU_ID);

CREATE TABLE votes
(
  ID            BIGINT NOT NULL DEFAULT nextval('GLOBAL_SEQ') PRIMARY KEY,
  DATE          DATE DEFAULT now()    NOT NULL,
  USER_EMAIL    VARCHAR(255)          NOT NULL,
  RESTAURANT_ID BIGINT               NOT NULL,
  FOREIGN KEY (RESTAURANT_ID) REFERENCES restaurants (ID)
    ON DELETE CASCADE
);
CREATE UNIQUE INDEX votes_unique_date_user_idx
  ON votes (DATE, USER_EMAIL);